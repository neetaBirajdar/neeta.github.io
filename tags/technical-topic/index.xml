<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Technical Topic on Neetz World</title>
    <link>https://neetabirajdar.github.io/tags/technical-topic/</link>
    <description>Recent content in Technical Topic on Neetz World</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 02 Apr 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://neetabirajdar.github.io/tags/technical-topic/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Test Report With Pytest</title>
      <link>https://neetabirajdar.github.io/blog/tech_pytest_report/</link>
      <pubDate>Sun, 02 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://neetabirajdar.github.io/blog/tech_pytest_report/</guid>
      <description>&lt;h2 id=&#34;what-is-test-report&#34;&gt;What is Test Report?&lt;/h2&gt;&#xA;&lt;p&gt;Test reporting is always important part of testing. It provides an overview of which testcases are working, which ones are failing and details like what happened if logged or printed.&lt;/p&gt;&#xA;&lt;h4 id=&#34;calculator-example&#34;&gt;Calculator Example:&lt;/h4&gt;&#xA;&lt;p&gt;Use the following example for test reporting:&#xA;&lt;em&gt;Calculator App&lt;/em&gt;: &lt;a href=&#34;https://github.com/neetaBirajdar/test_reporting&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/neetaBirajdar/test_reporting&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;&lt;h2 id=&#34;test-report-with-pytest&#34;&gt;Test Report with Pytest&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;pytest&lt;/code&gt; is a very well known testing framework used in python test world.&lt;/li&gt;&#xA;&lt;li&gt;There are multiple options for reporting that can be used along with Pytest to make the results easy to read and understand.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;pytest-html-report&#34;&gt;pytest-html Report:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Link: &lt;a href=&#34;https://pypi.org/project/pytest-html/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pypi.org/project/pytest-html/&lt;/a&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker with basic examples</title>
      <link>https://neetabirajdar.github.io/blog/docker_basic/</link>
      <pubDate>Wed, 08 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://neetabirajdar.github.io/blog/docker_basic/</guid>
      <description>&lt;h2 id=&#34;what-is-docker-&#34;&gt;What is Docker ?&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt; :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;It is a &lt;em&gt;open platform&lt;/em&gt; to deliver your application &lt;em&gt;faster&lt;/em&gt; to production.&lt;/li&gt;&#xA;&lt;li&gt;It helps in developing, running, testing, shipping the &lt;em&gt;same environment&lt;/em&gt; without worrying about the host infrastructure.&lt;/li&gt;&#xA;&lt;li&gt;Advantages:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Suitable for progressive deployment&lt;/li&gt;&#xA;&lt;li&gt;Dynamic workload management and scaling&lt;/li&gt;&#xA;&lt;li&gt;Cost efficient as compared to VMs(Virtual Machines)&lt;/li&gt;&#xA;&lt;li&gt;Open platform to use and to contribute&lt;/li&gt;&#xA;&lt;li&gt;Environment isolation&lt;/li&gt;&#xA;&lt;li&gt;Easy to share&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;components-of-docker&#34;&gt;Components of Docker&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;docker components&#34; src=&#34;../../images/docker_basic/components.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;docker-daemon&#34;&gt;Docker Daemon:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Listens to all the Docker API requests coming in the form of commands.&lt;/li&gt;&#xA;&lt;li&gt;Manages Docker objects like &lt;em&gt;images&lt;/em&gt;, &lt;em&gt;containers&lt;/em&gt;, &lt;em&gt;networks&lt;/em&gt; and &lt;em&gt;volumnes&lt;/em&gt;.&lt;/li&gt;&#xA;&lt;li&gt;It also communicate with other docker-daemons to manage the docker-service.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;docker-client&#34;&gt;Docker Client:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;It is the primary way with which user can interact with docker-daemon.&lt;/li&gt;&#xA;&lt;li&gt;Listens to the commands like &lt;code&gt;docker run&lt;/code&gt;, &lt;code&gt;docker build&lt;/code&gt; (via Docker APIs) and sends it to docker-daemon.&lt;/li&gt;&#xA;&lt;li&gt;This client can communicate to multiple docker-daemons at the same time.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;docker-registry&#34;&gt;Docker Registry:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The place to store the docker images is called docker registry.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Docker Hub&lt;/strong&gt; is the public registry available for everyone to access.&lt;/li&gt;&#xA;&lt;li&gt;You can &lt;code&gt;docker pull&lt;/code&gt; the docker-image and &lt;code&gt;docker push&lt;/code&gt; your docker-image to the registry.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;docker-objects&#34;&gt;Docker Objects:&lt;/h3&gt;&#xA;&lt;h4 id=&#34;images&#34;&gt;Images:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;It is a &lt;em&gt;read-only template&lt;/em&gt; which defines the environment you want to set for your application.&lt;/li&gt;&#xA;&lt;li&gt;Created with the file called &lt;code&gt;Dockerfile&lt;/code&gt; (name should be the same).&lt;/li&gt;&#xA;&lt;li&gt;Each instruction in Dockerfile is a &lt;em&gt;layer&lt;/em&gt;. Other images can also be used as layers.&lt;/li&gt;&#xA;&lt;li&gt;When you update and rebuild an image, only the layer which changed gets rebuilt.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;containers&#34;&gt;Containers:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;These are the &lt;em&gt;runnable instance&lt;/em&gt; of docker-images.&lt;/li&gt;&#xA;&lt;li&gt;Controlled via commands like &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt;, &lt;code&gt;create&lt;/code&gt; etc using docker-APIs or CLI.&lt;/li&gt;&#xA;&lt;li&gt;Containers can connect to one or more &lt;em&gt;networks&lt;/em&gt; and can attach &lt;em&gt;storage&lt;/em&gt; in the form of volumnes.&lt;/li&gt;&#xA;&lt;li&gt;All the containers are isolated from each other and its host machine too.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;two-ways-to-create-a-container&#34;&gt;Two ways to create a container:&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&#xA;Install the docker : &lt;a href=&#34;https://docs.docker.com/get-docker/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://docs.docker.com/get-docker/&lt;/a&gt;&#xA; before you go further.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MQTT with example</title>
      <link>https://neetabirajdar.github.io/blog/tech_mqtt/</link>
      <pubDate>Sun, 19 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://neetabirajdar.github.io/blog/tech_mqtt/</guid>
      <description>&lt;h2 id=&#34;what-is-mqtt-&#34;&gt;What is MQTT ?&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;MQTT&lt;/strong&gt; : &lt;em&gt;&lt;strong&gt;Message Queue Telemetry Transport&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;It is a &lt;em&gt;standard messaging protocal&lt;/em&gt; for &lt;em&gt;IoT(Internet of Things)&lt;/em&gt; sector.&lt;/li&gt;&#xA;&lt;li&gt;This was especially built for Machine-To-Machine(&lt;em&gt;M2M&lt;/em&gt;) communication.&lt;/li&gt;&#xA;&lt;li&gt;It is a simple, lightwieght but effective way to transport messages across a lot of devices with minimal bandwidth using &lt;em&gt;publisher/subscriber&lt;/em&gt; model.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;components-of-mqtt&#34;&gt;Components of MQTT:&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;MQTT Architecture&#34; src=&#34;../../images/mqtt_arch.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;MQTT Broker/Server&lt;/strong&gt;&lt;/em&gt;:&#xA;It is server which routes published data to the subscriber who subscribed to that topic.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
